---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  ## https://hub.docker.com/u/geerlingguy
  - name: buster
    groups:
      - family_debian
    children:
      - debian
    image: "geerlingguy/docker-debian10-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
  - name: jessie
    groups:
      - family_debian
    children:
      - debian
    image: "geerlingguy/docker-debian9-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
  - name: bionic
    groups:
      - family_debian
    children:
      - ubuntu
    image: "geerlingguy/docker-ubuntu1804-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
  - name: xenial
    groups:
      - family_debian
    children:
      - ubuntu
    image: "geerlingguy/docker-ubuntu1604-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
  - name: centos8
    groups:
      - family_redhat
    children:
      - centos
    image: "geerlingguy/docker-centos8-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
  - name: centos7
    groups:
      - family_redhat
    children:
      - centos
    image: "geerlingguy/docker-centos7-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
lint: |
  set -e
  yamllint .
  ansible-lint
provisioner:
  name: ansible
  options:
    diff: true
  config_options:
    defaults:
      hash_behaviour: merge
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
# verifier:
#   name: ansible
# scenario:
#   test_sequence:
#     - dependency
#     - lint
#     - cleanup
#     - destroy
#     - syntax
#     - create
#     - prepare
#     - converge
#     - idempotence
#     - side_effect
#     - verify
#     - cleanup
#     - destroy
#   create_sequence:
#     - dependency
#     - create
#     - prepare
#   check_sequence:
#     - dependency
#     - cleanup
#     - destroy
#     - create
#     - prepare
#     - converge
#     - check
#     - destroy
#   converge_sequence:
#     - dependency
#     - create
#     - prepare
#     - converge
#   destroy_sequence:
#     - dependency
#     - cleanup
#     - destroy
